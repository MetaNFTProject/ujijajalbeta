{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","bettaToken","web3","errorMsg","blockchainReducer","state","action","type","payload","allBettas","allOwnerBettas","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","getBettas","call","getOwnerBettas","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","App","useDispatch","useSelector","useState","setLoading","useEffect","onClick","e","preventDefault","window","ethereum","Web3","request","method","accounts","networkId","eth","Contract","BettaToken","abi","on","location","reload","style","padding","disabled","_account","_name","createRandomBetta","send","from","value","utils","toWei","once","err","then","receipt","flexWrap","map","item","index","id","dna","level","name","rarity","_id","levelUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.940f857a.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  bettaToken: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        bettaToken: action.payload.bettaToken,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  allBettas: [],\n  allOwnerBettas: [],\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...initialState,\n        loading: false,\n        allBettas: action.payload.allBettas,\n        allOwnerBettas: action.payload.allOwnerBettas,\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let allBettas = await store\n        .getState()\n        .blockchain.bettaToken.methods.getBettas()\n        .call();\n      let allOwnerBettas = await store\n        .getState()\n        .blockchain.bettaToken.methods.getOwnerBettas(account)\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          allBettas,\n          allOwnerBettas,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3 from \"web3\";\nimport BettaToken from \"../../contracts/BettaToken.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    if (window.ethereum) {\n      let web3 = new Web3(window.ethereum);\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        console.log(networkId);\n        if (networkId == 137) {\n          const bettaToken = new web3.eth.Contract(\n            BettaToken.abi,\n            \"0x0819A1D0D6037F85BEA97b32892A657Eb7cC7C8b\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              bettaToken: bettaToken,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Polygon.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [loading, setLoading] = useState(false);\n\n  console.log(data);\n\n  const mintNFT = (_account, _name) => {\n    setLoading(true);\n    blockchain.bettaToken.methods\n      .createRandomBetta(_name)\n      .send({\n        from: _account,\n        value: blockchain.web3.utils.toWei(\"0.001\", \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        setLoading(false);\n        console.log(err);\n      })\n      .then((receipt) => {\n        setLoading(false);\n        console.log(receipt);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const levelUpBetta = (_account, _id) => {\n    setLoading(true);\n    blockchain.bettaToken.methods\n      .levelUp(_id)\n      .send({\n        from: _account,\n      })\n      .once(\"error\", (err) => {\n        setLoading(false);\n        console.log(err);\n      })\n      .then((receipt) => {\n        setLoading(false);\n        console.log(receipt);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  useEffect(() => {\n    if (blockchain.account != \"\" && blockchain.bettaToken != null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.bettaToken]);\n\n  return (\n    <s.Screen>\n      {blockchain.account === \"\" || blockchain.bettaToken === null ? (\n        <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n          <s.TextTitle>Connect to the game</s.TextTitle>\n          <s.SpacerSmall />\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(connect());\n            }}\n          >\n            CONNECT\n          </button>\n          <s.SpacerXSmall />\n          {blockchain.errorMsg != \"\" ? (\n            <s.TextDescription>{blockchain.errorMsg}</s.TextDescription>\n          ) : null}\n        </s.Container>\n      ) : (\n        <s.Container ai={\"center\"} style={{ padding: \"24px\" }}>\n          <s.TextTitle>Welcome to the game</s.TextTitle>\n          <s.SpacerSmall />\n          <button\n            disabled={loading ? 1 : 0}\n            onClick={(e) => {\n              e.preventDefault();\n              mintNFT(blockchain.account, \"Paidul\");\n            }}\n          >\n            Buy Betta\n          </button>\n          <s.SpacerMedium />\n          <s.Container jc={\"center\"} fd={\"row\"} style={{ flexWrap: \"wrap\" }}>\n            {data.allBettas.map((item, index) => {\n              return (\n                <s.Container key={index} style={{ padding: \"15px\" }}>\n                  <s.SpacerXSmall />\n                  <s.Container>\n                    <s.TextDescription>ID: {item.id}</s.TextDescription>\n                    <s.TextDescription>DNA: {item.dna}</s.TextDescription>\n                    <s.TextDescription>LEVEL: {item.level}</s.TextDescription>\n                    <s.TextDescription>NAME: {item.name}</s.TextDescription>\n                    <s.TextDescription>RARITY: {item.rarity}</s.TextDescription>\n                    <s.SpacerXSmall />\n                    <button\n                      disabled={loading ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        levelUpBetta(blockchain.account, item.id);\n                      }}\n                    >\n                      Training\n                    </button>\n                  </s.Container>\n                </s.Container>\n              );\n            })}\n          </s.Container>\n        </s.Container>\n      )}\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}